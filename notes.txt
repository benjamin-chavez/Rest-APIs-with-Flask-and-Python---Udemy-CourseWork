SECTION 2:
********************************************************
5.29 - Lambda functions in Python
  - lambda functions do not have names and are only used 
    to return values
  - Used to return value not to perform actions


SECTION 3:
********************************************************
3.57 - HTTP Verbs"
- Requests tell the server to:
    GET - Retrieve Something
    Post - Receive data, and use it
    Put - Make sure that something is there
    Delete - Remove something

3.58 - REST Principles
- REST is a way of thinking about how a web server responds to your Requests
  the server responds with resources
- Same endpoint for different requests == same resource
- REST is stateless - One request cannot depen on any other requests

SECTION 4 (& section 6 setup):
********************************************************
4.64 - Firualenvs and setting up Flask-RESTful
- virtualenv venv --python=python3    - run this to set up the virtual environment
- source venv/bin/activate            - Mac/Linux - activate virtual environment
- ./venv/Scripts/activate.bat         - Windows
- deactivate                          - To leave the virtual environment
- rm -rf venv                         - To delete virtual environment
- pip3 install Flask
- pip3 install Flask-JWT              - For JWT Authentication
- pip3 install Flask-RESTful          - For API Mappings
- pip3 install Flask-SQLAlchemy       - SQLAlchemy for Flask

- mkdir code                          - Create a folde called code and cd into it
- python3 app.py                      - TO RUN SERVER

4.71 - Authentication and loggin in - pt. 1
- pip3 install Flask-JWT              install JSON Web Tokens
- Create mapping functions in security.py so that we do not have to iterate 
  through the database when we want to find a user, we can find the user
  simply by knowing their username or id

Status Codes:
- 200         - Okay
- 201         - Created
- 202         - Accepted - delaying the creation of an object
- 400         - Bad Request (user error)
- 404         - Not Found
- 500         - internal server error

Section 5:
********************************************************
Section 6:
********************************************************
Model - A model is our internal representation of an entity
      - Must contain the class properties as object properties
Resource - a resource is the external representation of an entity

- python3 create_tables.py            - to create SQLAlchemy database prior to running your app
  **
    -By running the following code in the app.py file, you don't need to run the create_table.py command
  @app.before_first_request
  def create_tables():
    db.create_all()

- python 3 app.py                     - be sure to start your app from the same folder where you ran create_tables command

Setting up SQLAlchemy:
  - In your main code folder create a file <db.py>

Section 7: Git
********************************************************
- git rm --cached <file>..              - to unstage from a commit

- Adding a README file with vim:
  - vim README.md                       - To enter vim for your new README file
  - i                                   - To enter the text editor within vim
  - esc (key)                           - To exit vim
  - :wq                                 - To save and create the README file

Section 8: Deploying Flask apps to Heroku
********************************************************
